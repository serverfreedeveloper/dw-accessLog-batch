javax.validation.constraints.AssertFalse.message = must be false
javax.validation.constraints.AssertTrue.message  = must be true
javax.validation.constraints.DecimalMax.message  = must be less than ${inclusive == true ? 'or equal to ' : ''}{value}
javax.validation.constraints.DecimalMin.message  = must be greater than ${inclusive == true ? 'or equal to ' : ''}{value}
javax.validation.constraints.Digits.message      = numeric value out of bounds (<{integer} digits>.<{fraction} digits> expected)
javax.validation.constraints.Future.message      = must be in the future
javax.validation.constraints.Max.message         = must be less than or equal to {value}
javax.validation.constraints.Min.message         = must be greater than or equal to {value}
javax.validation.constraints.NotNull.message     = may not be null
javax.validation.constraints.Null.message        = must be null
javax.validation.constraints.Past.message        = must be in the past
javax.validation.constraints.Pattern.message     = must match "{regexp}"
#javax.validation.constraints.Size.message        = size must be between {min} and {max}
javax.validation.constraints.Size.message        = {max}\u6587\u5b57\u4ee5\u5185\u3067\u5165\u529b\u3057\u3066\u304f\u3060\u3055\u3044\u3002
org.hibernate.validator.constraints.NotEmpty.message    = \u5fc5\u9808\u9805\u76ee\u3067\u3059\u3002
org.hibernate.validator.constraints.NotBlank.message    = {E0001}

org.hibernate.validator.constraints.CreditCardNumber.message        = invalid credit card number
org.hibernate.validator.constraints.EAN.message                     = invalid {type} barcode
org.hibernate.validator.constraints.Email.message                   = not a well-formed email address
org.hibernate.validator.constraints.Length.message                  = length must be between {min} and {max}
org.hibernate.validator.constraints.LuhnCheck.message               = The check digit for ${validatedValue} is invalid, Luhn Modulo 10 checksum failed
org.hibernate.validator.constraints.Mod10Check.message              = The check digit for ${validatedValue} is invalid, Modulo 10 checksum failed
org.hibernate.validator.constraints.Mod11Check.message              = The check digit for ${validatedValue} is invalid, Modulo 11 checksum failed
org.hibernate.validator.constraints.ModCheck.message                = The check digit for ${validatedValue} is invalid, ${modType} checksum failed

org.hibernate.validator.constraints.ParametersScriptAssert.message  = script expression "{script}" didn't evaluate to true
org.hibernate.validator.constraints.Range.message                   = must be between {min} and {max}
org.hibernate.validator.constraints.SafeHtml.message                = may have unsafe html content
org.hibernate.validator.constraints.ScriptAssert.message            = script expression "{script}" didn't evaluate to true
org.hibernate.validator.constraints.URL.message                     = must be a valid URL

org.hibernate.validator.constraints.br.CNPJ.message                 = invalid Brazilian corporate taxpayer registry number (CNPJ)
org.hibernate.validator.constraints.br.CPF.message                  = invalid Brazilian individual taxpayer registry number (CPF)
org.hibernate.validator.constraints.br.TituloEleitoral.message      = invalid Brazilian Voter ID card number

	#jp.co.gas.tokyo.ies.util.FixedLength.message                        = must E0004lue} digit
	E0001 = \u5165\u529b\u5fc5\u9808\u9805\u76ee\u3067\u3059\u3002
	E0002 = \u5165\u529b\u3057\u3066\u304f\u3060\u3055\u3044\u3002
	E0003 = \u59d3\u30fb\u540d\u4e21\u65b9\u5165\u529b\u3059\u308b\u5834\u5408\u306f\u5408\u308f\u305b\u306624\u6587\u5b57\u4ee5\u5185\u3067\u5165\u529b\u3057\u3066\u304f\u3060\u3055\u3044\u3002
	E0004 = \u59d3(\u30ab\u30ca)\u30fb\u540d(\u30ab\u30ca)\u4e21\u65b9\u5165\u529b\u3059\u308b\u5834\u5408\u306f\u5408\u308f\u305b\u306624\u6587\u5b57\u4ee5\u5185\u3067\u5165\u529b\u3057\u3066\u304f\u3060\u3055\u3044\u3002
	E0005 = \u59d3\u306e\u307f\u5165\u529b\u3059\u308b\u5834\u5408\u306f25\u6587\u5b57\u4ee5\u5185\u3067\u5165\u529b\u3057\u3066\u304f\u3060\u3055\u3044\u3002
	E0006 = \u59d3(\u30ab\u30ca)\u306e\u307f\u5165\u529b\u3059\u308b\u5834\u5408\u306f25\u6587\u5b57\u4ee5\u5185\u3067\u5165\u529b\u3057\u3066\u304f\u3060\u3055\u3044\u3002
	E0007 = {format}\u3067\u5165\u529b\u3057\u3066\u304f\u3060\u3055\u3044\u3002
	E0008 = \u306f\u5165\u529b\u6587\u5b57\u306b\u4f7f\u7528\u3067\u304d\u307e\u305b\u3093\u3002
	E0009 = \u901a\u4fe1\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u307e\u3057\u305f\u3002{format}\u306b\u5931\u6557\u3057\u307e\u3057\u305f\u3002
	E0010 = \u96fb\u8a71\u756a\u53f7\u304c\u6b63\u3057\u304f\u3042\u308a\u307e\u305b\u3093\u3002
	E0011 = \u5efa\u7269\u540d\u3068\u90e8\u5c4b\u756a\u53f7\u306f\u540c\u6642\u306b\u5165\u529b\u3057\u3066\u304f\u3060\u3055\u3044\u3002
	E0012 = \u5165\u529b\u3055\u308c\u305f\u90f5\u4fbf\u756a\u53f7\u304b\u3089\u4f4f\u6240\u304c\u898b\u3064\u304b\u308a\u307e\u305b\u3093\u3067\u3057\u305f\u3002\u90f5\u4fbf\u756a\u53f7\u304c\u6b63\u3057\u3044\u304b\u3054\u78ba\u8a8d\u304f\u3060\u3055\u3044\u3002
	E0013 = \u90f5\u4fbf\u756a\u53f7\u304c\u5909\u66f4\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u518d\u691c\u7d22\u3057\u3066\u304f\u3060\u3055\u3044\u3002
	E0014 = \u4f4f\u6240\u3092\u9078\u629e\u3057\u3066\u304f\u3060\u3055\u3044\u3002
	E0015 = {max}\u6587\u5b57\u4ee5\u5185\u3067\u5165\u529b\u3057\u3066\u304f\u3060\u3055\u3044\u3002
	E0016 = \u9078\u629e\u3057\u3066\u304f\u3060\u3055\u3044\u3002
	E0017 = {0}\u3092\u53d6\u5f97\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002
	E0018 = \u304a\u5ba2\u3055\u307e\u756a\u53f7\u3092\u30cf\u30a4\u30d5\u30f3\u7121\u3057\u3067\u5165\u529b\u3059\u308b\u5834\u5408\u306f\u300111\u6841\u3067\u5165\u529b\u3057\u3066\u304f\u3060\u3055\u3044\u3002
	E0019 = \u304a\u5ba2\u3055\u307e\u756a\u53f7\u3092\u30cf\u30a4\u30d5\u30f3\u5165\u308a\u3067\u5165\u529b\u3059\u308b\u5834\u5408\u306f\u300113\u6841\u3067\u5165\u529b\u3057\u3066\u304f\u3060\u3055\u3044\u3002
	E0020 = \u304a\u5ba2\u3055\u307e\u756a\u53f7\u306f11\u6841\u3001\u3082\u3057\u304f\u306f\u30cf\u30a4\u30d5\u30f3\u542b\u308113\u6841\u3067\u5165\u529b\u3057\u3066\u304f\u3060\u3055\u3044\u3002
	E0021 = \u901a\u4fe1\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u307e\u3057\u305f\u3002\u6642\u9593\u3092\u3042\u3051\u3066\u518d\u5ea6\u304a\u8a66\u3057\u304f\u3060\u3055\u3044\u3002
	E0022 = \u6b63\u3057\u304f\u3042\u308a\u307e\u305b\u3093\u3002
	E0023 = \u304a\u5ba2\u3055\u307e\u756a\u53f7\u3092\u30cf\u30a4\u30d5\u30f3\u5165\u308a\u3067\u5165\u529b\u3059\u308b\u5834\u5408\u306f\u3001\u6570\u5b574\u6841-\u6570\u5b573\u6841-\u6570\u5b574\u6841\u3067\u5165\u529b\u3057\u3066\u304f\u3060\u3055\u3044\u3002
	E0024 = \u901a\u4fe1\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u307e\u3057\u305f\u3002\u6642\u9593\u3092\u958b\u3051\u3066\u518d\u5ea6\u304a\u8a66\u3057\u304f\u3060\u3055\u3044\u3002
	E0025 = \u534a\u89d2\u6570\u5b573\u6841-4\u6841\u3067\u5165\u529b\u3057\u3066\u304f\u3060\u3055\u3044\u3002
	E0026 = \u30bb\u30c3\u30b7\u30e7\u30f3\u304c\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u3057\u307e\u3057\u305f\u3002\u3082\u3046\u4e00\u5ea6\u6700\u521d\u304b\u3089\u3084\u308a\u76f4\u3057\u3066\u304f\u3060\u3055\u3044\u3002
	E0027 = \u6b63\u3057\u3044\u304a\u5ba2\u3055\u307e\u756a\u53f7\u3092\u5165\u529b\u3057\u3066\u304f\u3060\u3055\u3044\u3002
	E0028 = \u30da\u30fc\u30b8\u306e\u6709\u52b9\u671f\u9650\u304c\u5207\u308c\u3066\u3044\u308b\u305f\u3081\u3001\u6700\u521d\u304b\u3089\u3084\u308a\u76f4\u3057\u3066\u304f\u3060\u3055\u3044\u3002